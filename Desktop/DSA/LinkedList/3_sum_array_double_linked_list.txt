package test;

public class Test {		
	static class Node {
        int data;
        Node next;
        Node prev;
        Node(int d){
        	data =d;
        	next = null;
        	prev = null;
        }
    };
    
    Node head = null;
    
     void add(int a) {
    	if(head == null) {
    		head = new Node(a);
    	}else {
    		Node temp = head;
    		while(temp.next!=null) {
    			temp = temp.next;
    		}
    		temp.next = new Node(a);
    		temp.next.prev = temp;
    	}
    }
    
    static void print(Node head) {
    	Node temp = head;
    	while(temp!=null) {
    		System.out.print(temp.data+" ");
    		temp = temp.next;
    	}
    	 System.out.println();
    }

    public static void main(String args[])
    {
        Test t = new Test();
        Node head = null;
        t.add(1);
        t.add(2);
        t.add(4);
        t.add(5);
        t.add(6);
        t.add(8);
        t.add(9);
//        print(t.head);    
        System.out.println(findPair(t.head,17));
    }
    
    public static int findPair(Node  head,int a)
    {
    	if(head== null || head.next== null || head.next.next==null) return 0;
        Node start = head.next;
    	int count = 0;
        Node end = head;
        Node var = head;
        while(var.next.next.next != null) {
        	end = head;
        	start = var.next;
        	while(end.next != null) end = end.next;
        	int d = var.data;
	        	while(start.data < end.data) {        		
	        		if(d+start.data+end.data>a) {
	        			end = end.prev;
	        			continue;
	        		}
	        		if(d+start.data+end.data < a) {
	        			start = start.next;
	        			continue;
	        		}
	        		else {
	        			count++;
	        			System.out.println(d+"+"+start.data+"+"+end.data);
	        			start = start.next;
	        			end = end.prev;
	        		}
	        	}
        		var = var.next;
        	}
        return count;
        }
}
