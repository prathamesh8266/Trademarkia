package test;

public class Test {		
	static class Node {
        int data;
        Node next;
        Node prev;
        Node(int d){
        	data =d;
        	next = null;
        	prev = null;
        }
    };
    
    Node head = null;
    
     void add(int a) {
    	if(head == null) {
    		head = new Node(a);
    	}else {
    		Node temp = head;
    		while(temp.next!=null) {
    			temp = temp.next;
    		}
    		temp.next = new Node(a);
    		temp.next.prev = temp;
    	}
    }
    
    static void print(Node head) {
    	Node temp = head;
    	while(temp!=null) {
    		System.out.print(temp.data+" ");
    		temp = temp.next;
    	}
    	 System.out.println();
    }

    public static void main(String args[])
    {
        Test t = new Test();
        Node head = null;
        t.add(1);
        t.add(2);
        t.add(3);
        t.add(4);
        t.add(5);
        t.add(6);
        t.add(7);
        t.add(8);
        t.add(9);
        t.add(10);
//        t.add(4);
//        t.add(2);
        rotate(t.head,5); //// test casee fail for n = 10(num equal to num length of list)
        print(t.head);    
    }
    
    public static void rotate(Node  head,int a){
    	Node temp = head;
    	while(temp.next != null) {
    		shift(temp,a);
    		for(int i=0;i<a;i++) {
    			if(temp.next == null) break;
    			temp = temp.next;
    		}
    	}
    }
    
    public static void shift(Node n,int d) {
    	Node start = n;
    	Node end = n;
    	for(int i=0;i<d-1;i++) {
    		if(end.next == null) break;
    		end = end.next;
    	}
    	while(start != end) {
    		int temp = start.data;
    		start.data = end.data;
    		end.data = temp;
    		System.out.println(start.data+" "+end.data);
    		if(start != n && (start.next == end || start.prev == end.next)) break;
    		start = start.next;
    		end = end.prev;
    	}
    }
}
