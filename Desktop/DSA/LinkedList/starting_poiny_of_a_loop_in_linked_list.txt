package DSA;
import java.util.HashMap;
import java.util.HashSet;

public class dsa {	
	
	static class Node{
		int data;
		Node next;
		Node(int d){			
			data = d;
			next = null;
		}
	}
	static class linkedList{
		Node head;
		void hardCode() {
			head = new Node(1);
			head.next = new Node(2);
			Node temp = head.next;
			head.next.next = new Node(3);
			head.next.next.next = new Node(4);
			head.next.next.next.next = new Node(5);
			head.next.next.next.next = temp;
		}
		void print() {
			Node temp = head;
			while(temp!=null) {
				System.out.print(temp.data+" ");
				temp = temp.next;
			}
		}
		Node findLoopNode(Node head){
			Node fast = head;
			Node slow = head;
			while(fast!=null) {
				fast = fast.next;
				if(fast!=null) {
					fast = fast.next;
					slow = slow.next;
					if(fast == slow) {
						fast = head;
						while(fast.next!=slow.next) {
							fast = fast.next;
							slow = slow.next;
						}
						return fast.next;
					}
				}
			}
			return null;
		}
	}
	 public static void main(String[] args){
		linkedList ll = new linkedList();
		ll.hardCode();
		System.out.println(ll.findLoopNode(ll.head).data);
//		ll.print();
	 }
  	
}






























