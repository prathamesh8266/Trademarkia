package test;
import java.util.*;

public class Test {
	
	public static void main(String[] args) {
		int matrix[][] = {{1, 3, 5}, 
		                  {2, 6, 9}, 
		                  {3, 6, 9}};
		System.out.println(binaryMedian(matrix,3,3));
	}
		
	
	 public static int binaryMedian(int m[][],int r, int c)
	    {
	        int max = Integer.MIN_VALUE;
	        int min = Integer.MAX_VALUE;
	         
	        for(int i=0; i<r ; i++)
	        {
	             
	            // Finding the minimum element
	            if(m[i][0] < min)
	                min = m[i][0];
	             
	            // Finding the maximum element
	            if(m[i][c-1] > max)
	                max = m[i][c-1];
	        }
	         
	        int desired = (r * c + 1) / 2;
	        while(min < max)
	        {
	            int mid = min + (max - min) / 2;
	            int place = 0;
	           for(int i = 0;i<r;i++) {
	        	   place += upper_bound(m[i],mid);
	           }
	             
	            if (place < desired)
	                min = mid + 1;
	            else
	                max = mid;
	        }
	        return min;
	    }
	 
	 static int  upper_bound(int[] arr,int mid) {
		 int tot = 0;
		 for(int i=0;i<arr.length;i++) {
			 if(arr[i]<=mid) {
				 tot++;
			 }
		 }
		 return tot;
	 }
}

