package leetcode;
import java.util.*;
import java.util.Map.Entry;
public class Solution {
	
	 public static void main(String[] args){
		System.out.println(maxSubArray(new int[]{-2,1,-3,4,-1,2,1,-5,4}));
		 System.out.println(maxSubArray(new int[]{5,4,-1,7,8}));
		 System.out.println(maxSubArray(new int[]{1}));
	 }
	 
	 
	 static int maxSubArray(int[] nums) {
		 if(nums.length==1) {
			 return nums[0];
		 }
		 int sum = subArray(nums);
		 return sum;
	 }
	 
	 //////////////////////////// KADANS ALGORITHAM //////////////////////////
	 
	 static int subArray(int[] arr) {
		 int maxSum = Integer.MIN_VALUE;
		 int curSum = 0;
		 for(int i=0;i<arr.length;i++) {
			curSum = curSum + arr[i];
			if(curSum > maxSum) {
				maxSum = curSum;
			}
			if(curSum < 0) {
				curSum = 0;
			}
		 }
		 return maxSum;
	 }
}