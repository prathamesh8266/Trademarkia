package DSA;
import java.util.*;

public class dsa {
	
	public static void main(String[] args) {
		int[] arr = new int[] {1,2,3};
		nextPermutation(arr);
		for(int a:arr) {
			System.out.println(a);
		}
	}
	
    public static void nextPermutation(int[] nums) {
       if(nums.length == 0 || nums.length ==1) return;
       int i = nums.length-2;
       while(i>=0 && nums[i]>=nums[i+1]) i--;
       if(i>=0) {
    	   int j = nums.length-1;
    	   while(nums[j]<=nums[i]) j--;
    	   swap(nums,i,j);
       }
       reverse(nums , i+1 , nums.length-1);
    }
    public static void reverse(int[] nums,int i,int j) {
    	while(i<j) swap(nums,i++,j--);
    }
    public static void swap(int[] nums,int i,int j) {
    	int temp = nums[i];
    	nums[i] = nums[j];
    	nums[j] = temp;
    }
}





































