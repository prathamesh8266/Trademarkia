package DSA;	
import java.util.*;

public class dsa{
	
	public static void main(String args[]) {

		Stack<Integer> s = new Stack<>();
		s.push(10);
		s.push(5);
		s.push(2);
		s.push(1);
		s.push(200);
		reverse(s);
		while(!s.isEmpty()) {
			System.out.println(s.pop());
		}
	}
	
	static void reverse(Stack<Integer> s) {  //// make input smaller by removing one 
//													element at a time and sending it to 
//													reverse function
		if(!s.isEmpty()) {
			int temp = s.pop();
			reverse(s);
			stackReverse(s,temp);
		}
		return;
	}
	
	static void stackReverse(Stack<Integer> s,int x) {
		if(s.isEmpty()) {
			s.push(x);
			return;
		}
		int top = s.pop();
		stackReverse(s,x);
		s.push(top);
		return;
	}
}

















