import java.lang.reflect.Array;
import java.util.*;

public class DSA {

    static class Node {
        Node left, right;
        int data;
        Node(int d) {
            data = d;
            left = null;
            right = null;
        }
    }

    static Scanner sc = new Scanner(System.in);

    public static Node tree() {
        Node node = null;
        int a = sc.nextInt();
        if (a == -1) return null;
        else node = new Node(a);
        node.left = tree();
        node.right = tree();
        return node;
    }


    static void print(Node node) {
        if (node == null) return;
        print(node.left);
        System.out.print(node.data + " ");
        print(node.right);
        return;
    }

    public static void main(String[] args) {
        Node t = tree();
        int a = dupSub(t);
        if(a == 1)
            System.out.print(" Yes ");
        else
            System.out.print(" No ");
    }

    static ArrayList<Node> list=new ArrayList<>();

    static int dupSub(Node root) {
        travers(root);
        for(int i=0;i<list.size()-1;i++)
            for(int j=i+1;j<list.size();j++)
            {
                Node node1=list.get(i);
                Node node2=list.get(j);
                if(node1.data == node2.data)
                {
                    if(node1.left !=null && node2.left !=null)
                        if(node1.right !=null && node2.right !=null)
                            if(((node1.left).data == (node2.left).data) && ((node1.right).data == (node2.right).data))
                                return 1;
                }
            }
        return 0;
    }

    static void travers(Node node)
    {
        if (node == null)
            return;

        list.add(node);
        travers(node.left);
        travers(node.right);
    }
}
