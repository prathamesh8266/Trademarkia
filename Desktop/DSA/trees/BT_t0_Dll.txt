import java.lang.reflect.Array;
import java.util.*;

public class DSA {

    static class Node {
        Node left, right;
        int data;
        Node(int d) {
            data = d;
            left = null;
            right = null;
        }
    }

    static class Node{
        Node head=null,prev,next;
        int data;
        Node(){
        }
        Node(int d){
            data = d;
            prev = null;
            next = null;
        }
        void add(int d){
            if(head == null){
                head = new Node(d);
            }else{
                Node temp = head;
                while(temp.next!=null){
                    temp = temp.next;
                }
                temp.next = new Node(d);
                temp.next.prev = temp;
            }
        }
    }


    static Scanner sc = new Scanner(System.in);

    public static Node tree() {
        Node node = null;
        int a = sc.nextInt();
        if (a == -1) return null;
        else node = new Node(a);
        node.left = tree();
        node.right = tree();
        return node;
    }


    static void print(Node node) {
        if (node == null) return;
        print(node.left);
        System.out.print(node.data + " ");
        print(node.right);
        return;
    }
    static void printDll(Dnode node){
        Dnode temp = node;
        while (temp.next!=null){
            System.out.print(temp.data);
            temp = temp.next;
        }
    }

    public static void main(String[] args) {
        Node t = tree();
        print(t);
        Dnode n = new Dnode();
        toDll(t,new Dnode());
        printDll(n);
    }

    static void toDll(Node node,Dnode dnode){
        if(node == null) return;
        toDll(node.left,dnode);
        dnode.add(node.data);
        toDll(node.right,dnode);
        return;
    }

}