import java.lang.reflect.Array;
import java.util.*;

public class DSA {

    static class Node {
        Node left, right;
        int data;
        Node(int d) {
            data = d;
            left = null;
            right = null;
        }
    }

    static Scanner sc = new Scanner(System.in);

    public static Node tree() {
        Node node = null;
        int a = sc.nextInt();
        if (a == -1) return null;
        else node = new Node(a);
        node.left = tree();
        node.right = tree();
        return node;
    }


    static void print(Node node) {
        if (node == null) return;
        print(node.left);
        System.out.print(node.data + " ");
        print(node.right);
        return;
    }

    public static void main(String[] args) {
        Node t = tree();
        System.out.println(isSumTree(t));
    }
    static boolean bal = true;
    public static boolean isSumTree(Node node){
        isBal(node,0);
        System.out.println(ar);
        int a = ar.size();
        for(int i=0;i<a-1;i++){
            if(ar.get(i)!=ar.get(i+1)){
                bal = false;
            }
        }
        return bal;
    }
    static ArrayList<Integer> ar = new ArrayList<>();
    static public ArrayList<Integer> isBal(Node node,int level){
        if(node.left == null && node.right == null){
            ar.add(level);
            return ar;
        }
        if(node.left!=null)
        isBal(node.left,level+1);
        if(node.right!=null)
        isBal(node.right,level+1);
        return ar;
    }
}
