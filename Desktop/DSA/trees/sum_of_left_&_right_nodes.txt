import java.lang.reflect.Array;
import java.util.*;

public class DSA {

    static class Node {
        Node left, right;
        int data;
        Node(int d) {
            data = d;
            left = null;
            right = null;
        }
    }

    static Scanner sc = new Scanner(System.in);

    public static Node tree() {
        Node node = null;
        int a = sc.nextInt();
        if (a == -1) return null;
        else node = new Node(a);
        node.left = tree();
        node.right = tree();
        return node;
    }


    static void print(Node node) {
        if (node == null) return;
        print(node.left);
        System.out.print(node.data + " ");
        print(node.right);
        return;
    }

    public static void main(String[] args) {
        Node t = tree();
        toSumTree(t);
    }

    static void toSumTree(Node root){
        s2t(root);
        print(root);
    }
    static int s2t(Node node){
        if(node == null) return 0;

        int l = s2t(node.left);
        int r = s2t(node.right);
        int temp = node.data;
        node.data = l+r;
        System.out.println(node.data);
        return temp+l+r;
    }

}