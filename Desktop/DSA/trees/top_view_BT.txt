import java.util.*;

public class DSA {

    static class Node{
        Node left,right;
        int data;
        Node(int d){
            data = d;
            left = null;
            right = null;
        }
    }
    static Scanner sc = new Scanner(System.in);
    public static Node tree(){
        Node node = null;
//        System.out.println("Enter data");
        int a = sc.nextInt();
        if(a == -1) return null;
        else node = new Node(a);
//        System.out.println("Enter for left Node");
        node.left = tree();
//        System.out.println("Enter for right Node");
        node.right = tree();
        return node;
    }
    static void print(Node node){
        if(node == null) return;
        System.out.print(node.data+" ");
        print(node.left);
        print(node.right);
        return;
    }

    public static void main(String[] args){
        Node n = tree();
//        print(n);
        System.out.println(topView(n));
//        System.out.println(map);
    }

    static ArrayList<Integer> ar = new ArrayList<>();
    static HashMap<Integer,Integer> map = new HashMap<>();
    static int min = Integer.MAX_VALUE,max=Integer.MIN_VALUE;

    static ArrayList<Integer> topView(Node root){
        view(root,false,false,0);
        System.out.println(max+" "+min+" "+map);
        for(int i=min;i<=max;i++){
            ar.add(map.get(i));
        }
        return ar;
    }
    static void view(Node node,boolean left,boolean right,int a){
        if(node == null ) return;
//        System.out.println(a);

        if(left == true){
            a-=1;
        }if(right == true){
            a+=1;
        }
        if(a < min){
            min = a;
        }
        if(a > max){
            max = a;
        }
//        System.out.println(a+" "+node.data);
        if(!map.containsKey(a)){
            map.put(a,node.data);
        }
        view(node.left,true,false,a);
        view(node.right,false,true,a);
        return;
    }
}
