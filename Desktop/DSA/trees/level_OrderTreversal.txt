package DSA;
import java.util.*;
import java.util.Scanner;

class Node{
	int data;
	Node left,right;
	Node(int d){
		data = d;
	}
}

public class trees {
	static Scanner sc = new Scanner(System.in);

	public static void main(String[] args) {
		Node t = tree();

		System.out.println(levelOrder(t));
	}
	
	static Node tree() {
		Node root = null;
		
		System.out.println("enter data:");
		int d = sc.nextInt();
		if(d == -1) return null;
		
		root = new Node(d);
		System.out.println("enter left of "+d);
		root.left = tree();
		System.out.println("enter right of "+d);
		root.right = tree();
		
		return root;
	}
	
	static void print(Node root) {
		System.out.println(root.data+" ");
		if(root.left!=null) {
			print(root.left);
		}else return;
		if(root.right!=null) {
			print(root.right);
		}else {
			return;
		}
	}

	    static ArrayList <Integer> levelOrder(Node node) 
	    {
	       if(node == null) 
	    	   return null;
	       Queue<Node> q = new LinkedList<>();
	       q.add(node);
	       ArrayList<Integer> res = new ArrayList<>();
	       while(!q.isEmpty()) {
	    	   Node x=q.remove();
	           res.add(x.data);
	           if(x.left!=null)
	               q.add(x.left);
	           if(x.right!=null)
	               q.add(x.right);
	       }
	       return res;
	    }
}
