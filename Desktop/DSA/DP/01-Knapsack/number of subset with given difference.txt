package DSA;	
import java.util.*;

public class dsa {	

	public static void main(String args[]) {
		int arr[] = {1,1,2,3};
        int n = arr.length;
        int sum = 0;
        for(int i=0;i<n;i++) {
        	sum+=arr[i];
        }
        System.out.println(findDiff(arr, n,sum,1));
	}
	static int count = 0;
	static int find = 0;
	static boolean findBool = true;
	public static int findDiff(int arr[],int n,int sum,int diff){
//		if(findBool) {
//			find = (sum-diff)/2;
//			findBool = false;
//		}
//		if(sum == find) {
//			return 1;
//		}
//		if(n == 0 || sum<find) {
//			return 0;
//		}
//		if(arr[n-1]>sum) {
//			return findDiff(arr,n-1,sum,diff);
//		}
//		else {
//			return findDiff(arr,n-1,sum-arr[n-1],diff)+
//					findDiff(arr,n-1,sum,diff);
//		}
		
		if(findBool) {
			find = (sum-diff)/2;
			findBool = false;
		}
		int dp[][] = new int[n+1][sum+1];
		for(int i=0;i<n+1;i++) {
			dp[i][0]=1;
		}
		for(int i=1;i<sum+1;i++) {
			dp[0][i]=0;
		}
		for(int i=1;i<n+1;i++) {
			for(int j=1;j<sum+1;j++) {
				if(arr[i-1]>j) {
					dp[i][j] = dp[i-1][j];
				}else {
					dp[i][j] = dp[i-1][j-arr[i-1]]+dp[i-1][j];
				}
			}
		}
		for(int i=0;i<n+1;i++) {
			for(int j=0;j<sum+1;j++) {
				System.out.print(dp[i][j]+" ");
			}
			System.out.println();
		}
		return dp[n][find];		
	}
}	      






























