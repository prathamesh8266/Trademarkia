package DSA;	
import java.util.*;

public class dsa {	

	public static void main(String args[]) {

		String s1 = "abemvn";
		String s2 = "abvmvn";
		int n = s1.length();
		int m = s2.length();
		int dp[][] = new int[n+1][m+1];
        System.out.println(lcs(s1,s2,s1.length(),s2.length(),0));
	}
	
	private static int lcs(String s1,String s2,int n,int m,int countMain){
		
		/////////////////////////////////// recursive approach /////////////////
		
//		if(n == 0 || m == 0)
//			return countMain;
//		
//		if(s1.charAt(n-1)==s2.charAt(m-1)) {
//			countMain = lcs(s1,s2,n-1,m-1,countMain+1);
//		}
//		
//		int count1 = lcs(s1,s2,n-1,m,0);
//		int count2 = lcs(s1,s2,n,m-1,0);
//		
//		return Math.max(countMain,Math.max(count1, count2));
		
		///////////////////////////////////////// Iterative approach /////////////////
		
		int arr[][] = new int[n+1][m+1];
		int lcs = 0;
		
		for(int i = 1; i <= n; i++) {
		      for(int j = 1; j <= m; j++) {
		        
		        if(s1.charAt(i - 1) == s2.charAt(j - 1)) {
		          arr[i][j] = 1 + arr[i - 1][j - 1];		          
		          lcs = Math.max(lcs, arr[i][j]);
		        } else {
		          arr[i][j] = 0;
		        }
		        
		      }
		    }
		    
		for(int i=0;i<n+1;i++) {
			for(int j=0;j<m+1;j++) {
				System.out.print(arr[i][j]+" ");
			}
			System.out.println();
		}
	    return arr[n][m];	
	}
}
	










