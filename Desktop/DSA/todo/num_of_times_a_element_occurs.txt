package DSA;	
import java.util.*;

public class dsa {
	
	public static void main (String[] args) {
//		System.out.println(find(new long[] { 1, 3, 5, 5, 5, 5, 7, 123, 125 } , 9, 7));
		System.out.println(find(new long[] { 1, 3, 5, 5, 5, 5, 7, 123, 125 } , 9, 5));
	}

	static int[] a = new int[2];
	 public static  ArrayList<Long> find(long arr[], int n, int x){
		int i = 0;
		int j = arr.length-1;
		a[0] = binarySearchS(arr ,i,j,x);
		a[1] = binarySearchE(arr ,i,j,x);
		ArrayList<Long> ar = new ArrayList<>();
		for(int ind:a) {
			ar.add((long)ind);
		}
		return ar;
	}
	 public static int binarySearchS(long arr[],int s,int e,int x) {
		 int ind = -1;
		 while(s<=e) {
			 int m = s+(e-s)/2;
			 if(arr[m] >= x) {
				 e = m-1;
			 }else {
				 s = m+1;
			 }
			 if(arr[m] == x) ind = m;
		 }
		return ind;
	 }
	 
	 public static int binarySearchE(long arr[],int s,int e,int x) {
		 int ind = -1;
		 while(s<=e) {
			 int m = s+(e-s)/2;
			 if(arr[m] <= x) {
				 s = m+1;
			 }else {
				 e = m-1;
			 }
			 if(arr[m] == x) ind = m;
		 }
		return ind;			
	 }
}































