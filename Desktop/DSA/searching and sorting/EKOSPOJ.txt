package DSA;	
import java.util.*;

public class dsa {
	
	public static void main(String args[] ){
		Scanner sc = new Scanner(System.in);
		int test = sc.nextInt();
		int num = sc.nextInt();
		int arr[] = new int[test];
		for(int i=0;i<test;i++) {
			arr[i] = sc.nextInt();
		}
		System.out.println(findHeight(arr,test,num));
    }
	public static int findHeight(int[]arr,int N,int M){
        int max = 0,min = 0,mid,point=0;
        for(int i=0;i<N;i++) {
        	if(arr[i]>max) {
        		max = arr[i];
        	}
        	if(arr[i]<min) {
        		min = arr[i];
        	}
        }
        while(min<=max) {
        	mid = (min+max)/2;
        	if(isPossible(arr,N,M,mid)==M) {
//        		System.out.println("possible :"+isPossible(arr,N,M,mid)
//        		+" with mid: "+mid);
        		point = mid;
        	}
        	if(isPossible(arr,N,M,mid)>M) {
        		min = mid +1;
        	}else {
        		max = mid -1 ;
        	}
        }
        return point;
    }
	public static int isPossible(int[] arr,int N,int M,int mid) {
		int sum=0;
		for(int i=0;i<arr.length;i++) {
			if(arr[i]>mid) {
				sum+=arr[i]-mid;
			}
		}
		return sum;
	}
}	      






























